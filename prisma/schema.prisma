// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String         @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  email          String         @unique
  password       String
  image          String?
  role           Role           @default(JOB_SEEKER)
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  applications   Application[]
  companyProfile Company?
  jobsPosted     Job[]          @relation("postedJobs")
}

model Company {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  logo        String?
  website     String?
  description String?
  industry    String?
  location    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String   @unique @db.ObjectId
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  jobs        Job[]
}

model Job {
  id              String        @id @default(auto()) @map("_id") @db.ObjectId
  title           String
  description     String
  requirements    String[]
  responsibilities String[]
  location        String
  salary          String?
  jobType         JobType
  experienceLevel String
  skills          String[]
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  deadline        DateTime?
  companyId       String        @db.ObjectId
  company         Company       @relation(fields: [companyId], references: [id], onDelete: Cascade)
  applications    Application[]
  postedById      String        @db.ObjectId
  postedBy        User          @relation("postedJobs", fields: [postedById], references: [id])
}

model Application {
  id         String           @id @default(auto()) @map("_id") @db.ObjectId
  resumeUrl  String
  coverLetter String?
  status     ApplicationStatus @default(PENDING)
  createdAt  DateTime         @default(now())
  updatedAt  DateTime         @updatedAt
  jobId      String           @db.ObjectId
  job        Job              @relation(fields: [jobId], references: [id], onDelete: Cascade)
  applicantId String          @db.ObjectId
  applicant  User             @relation(fields: [applicantId], references: [id], onDelete: Cascade)
}

enum Role {
  ADMIN
  COMPANY
  JOB_SEEKER
}

enum JobType {
  FULL_TIME
  PART_TIME
  CONTRACT
  INTERNSHIP
  REMOTE
}

enum ApplicationStatus {
  PENDING
  REVIEWED
  INTERVIEWING
  REJECTED
  ACCEPTED
}
